<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Report extends CI_Controller{
    function __construct()
    {
        parent::__construct();
    } 
    function get_product_sale_report()
    {
        $where ='';
        if(isset($_GET['customer_id']) && $_GET['customer_id']!='')
        {
            $where .= ' and i.customer_id='.$_GET['customer_id'];
        }
        if(isset($_GET['invoice_to']) && $_GET['invoice_to']!='')
        {
            $where .= ' and i.created_on >="'.$_GET['invoice_to'].'"';
        }
        if(isset($_GET['invoice_from']) && $_GET['invoice_from']!='')
        {
            $where .= ' and i.created_on<="'.$_GET['invoice_from'].'"';
        }
        $data['all_customer']=  $this->Common_model->get_sql_rows("SELECT id, company_name from customers");
      $data['report']=  $this->Common_model->get_sql_rows("SELECT c.id as CustId, c.name, c.company_name, i.id as InvoiveId, i.total_cost, od.title, od.sku, sum(od.qty) as totalQty FROM customers as c, invoices as i, order_details as od WHERE c.id = i.customer_id and i.id = od.invoice_id ".$where." GROUP by c.id,od.product_id");
        //echo $this->db->last_query();
       $data['_view'] = 'report/customer_behaviour';
        $this->load->view('layouts/main',$data);

    }
    function get_sales_report()
    {
        $where ='';
        if(isset($_GET['customer_id']) && $_GET['customer_id']!='')
        {
            $where .= ' and customer_id='.$_GET['customer_id'];
        }
        if(isset($_GET['invoice_to']) && $_GET['invoice_to']!='')
        {
            $where .= ' and created_on >="'.$_GET['invoice_to'].'"';
        }
        if(isset($_GET['invoice_from']) && $_GET['invoice_from']!='')
        {
            $where .= ' and created_on<="'.$_GET['invoice_from'].'"';
        }
        $data['all_customer']=  $this->Common_model->get_sql_rows("SELECT id, company_name from customers");
      //  $data['receipts'] =$this->Common_model->get_sql_rows("SELECT sum(pay_amount) as receipt, date(pay_date) as payment_date, count(id) as total_payment  from receipts  GROUP by date(pay_date)");

     // $data['report']=  $this->Common_model->get_sql_rows("SELECT sum(total_cost) as total_cost, count(id) as total_inv, date(created_on) as Sale_date, ''  as payment_date , '' as receipt, '' as total_payment from invoices where 1 ".$where." GROUP by date(created_on)");
      $data['report']= $this->Common_model->get_sql_rows("Select r.receipt, r.payment_date, r.total_no_payment, p.total_cost, p.total_inv, p.Sale_date
 from
(
SELECT sum(pay_amount) as receipt, date(pay_date) as payment_date, count(id) as total_no_payment  from receipts  GROUP by date(pay_date)
) r
right join
(
SELECT sum(total_cost) as total_cost, count(id) as total_inv, date(created_on) as Sale_date from invoices where 1 ".$where."   GROUP by date(created_on)
) p ON p.Sale_date=r.payment_date");

      $data['pending_amount'] = $this->Common_model->get_sql_rows("Select sum(total_cost) as pending_amt from invoices where payment_status='Pending' or payment_status='Partial'");
      $data['due_amount'] = $this->Common_model->get_sql_rows("Select sum(total_cost) as due_amt from invoices where (payment_status='Pending' or payment_status='Partial') And DATE(invoice_due_date) >='".date('Y-m-d')."'");

        //echo $this->db->last_query();
       $data['_view'] = 'report/sales';
        $this->load->view('layouts/main',$data);

    }
    //------------------ product report start -------------------
    function product()
    {
        $this->Common_model->checklogin();

        $data['invoice_to'] = date('Y-m-d', strtotime("-1 months")); 
        $data['invoice_from'] = date('Y-m-d'); 

        $qu = "select distinct(product_id) from order_details where created >= '".$data['invoice_to']."' and created <= '".$data['invoice_from']."'";
        //echo $this->db->last_query();
        
        $query = $this->db->query($qu);
        $data['order_details'] = $query->result();    

        $this->load->model('Product_model');
        $data['all_product'] = $this->Product_model->get_all_products();
        
        $data['_view'] = 'report/product';
        $this->load->view('layouts/main',$data);
    }

    function get_product_report()
    {
        $this->Common_model->checklogin();

        $invoice_to = $this->input->post("invoice_to");
        $invoice_from = $this->input->post("invoice_from");
        $product_id = $this->input->post("product_id");
        $report_data = '';
        $csv_data = '';

        if(empty($invoice_to) && empty($invoice_from)){
            $response = array(
                "status" => "error",
                "message" => "Record not found.",
            );
        }
        else{
            if(empty($product_id)){
                $qu = "select distinct(product_id) from order_details where created >= '".$invoice_to."' and created <= '".$invoice_from."'";
            }
            else{
                $qu = "select distinct(product_id) from order_details where (created >= '".$invoice_to."' and created <= '".$invoice_from."') and product_id = '".$product_id."' ";
            }
            $query = $this->db->query($qu);
            $order_details = $query->result();   

            if(!empty($order_details)){
                foreach($order_details as $p){  
                    $qu = "select sum(qty) as qty from order_details where (created >= '".$invoice_to."' and created <= '".$invoice_from."') and product_id = '".$p->product_id."'";
                    $query = $this->db->query($qu);
                    $total_sale = $query->row();    

                    $qu = "select sku, name, quantity from products where id = '".$p->product_id."'";
                    $query = $this->db->query($qu);
                    $products = $query->row();
                
                    $invoice_ids = "";
                    $qu = "select invoice_id from order_details where (created >= '".$invoice_to."' and created <= '".$invoice_from."') and product_id = '".$p->product_id."'";
                    $query = $this->db->query($qu);
                    $invoice_data = $query->result();    
                    foreach($invoice_data as $invoic){
                        if($invoice_ids == ""){
                            $invoice_ids = $invoic->invoice_id;
                        }
                        else{
                            $invoice_ids .= ",".$invoic->invoice_id;   
                        }
                    }

                    $report_data .= '<tr>
                        <td>'.$products->sku.'</td>
                        <td>'.$products->name.'</td>                     
                        <td>'.$total_sale->qty.'</td>                      
                        <td>Invoice ID#'.$invoice_ids.'</td>                     
                        <td>'.$products->quantity.'</td>                      
                    </tr>';
                } 
                $csv_data .= '<tr>
                    <td colspan="5">
                        <a href="'.base_url().'report/export_product_report/'.$invoice_to.'/'.$invoice_from.'/'.$product_id.'" class="btn btn-info btn-xs">
                            <span class="fa fa-pencil"></span>Export CSV
                        </a></td></tr>';
            } 
            else{ 
                $report_data .= '<tr>
                    <td colspan="5">No record Found.</td>
                </tr>';
            } 

            $response = array(
                "status" => "success",
                "report_data" => $report_data,
                "csv_data" => $csv_data,
            ); 
        }
        echo json_encode($response);    
    }
  
    function export_product_report($invoice_to, $invoice_from, $product_id)
    {
        $this->Common_model->checklogin();
        $this->load->helper('csv');

        $arr[] = array('SKU','Product Name', 'Total Sale','Stock Availibility');
        if(empty($product_id)){
            $qu = "select distinct(product_id) from order_details where created >= '".$invoice_to."' and created <= '".$invoice_from."'";
        }
        else{
            $qu = "select distinct(product_id) from order_details where (created >= '".$invoice_to."' and created <= '".$invoice_from."') and product_id = '".$product_id."' ";
        }        
        $query = $this->db->query($qu);
        $order_details = $query->result();   
        foreach($order_details as $p){  
            $qu = "select sum(qty) as qty from order_details where (created >= '".$invoice_to."' and created <= '".$invoice_from."') and product_id = '".$p->product_id."'";
            $query = $this->db->query($qu);
            $total_sale = $query->row();    

            $qu = "select sku, name, quantity from products where id = '".$p->product_id."'";
            $query = $this->db->query($qu);
            $products = $query->row();
            
            $arr[] = array($products->sku, $products->name, $total_sale->qty, $products->quantity);
        } 
        array_to_csv($arr, 'product_report'.date('Y-m-d').'.csv');
    }  
    //------------------ product report end -------------------

    //------------------ customer report start -------------------
    function customer()
    {
        $this->Common_model->checklogin();

        $data['invoice_to'] = date('Y-m-d', strtotime("-1 months")); 
        $data['invoice_from'] = date('Y-m-d'); 

        $qu = "select id, name, company_name, company_address, billing_state from customers";
        $query = $this->db->query($qu);
        $data['customer_details'] = $query->result();    

        $this->load->model('Customer_model');
        $data['all_customer'] = $this->Customer_model->get_all_customers();
        
        $data['_view'] = 'report/customer';
        $this->load->view('layouts/main',$data);
    }

    function get_customer_report()
    {
        $this->Common_model->checklogin();

        $invoice_to = $this->input->post("invoice_to");
        $invoice_from = $this->input->post("invoice_from");
        $customer_id = $this->input->post("customer_id");
        $report_data = '';
        $csv_data = '';

        if(empty($invoice_to) && empty($invoice_from)){
            $response = array(
                "status" => "error",
                "message" => "Record not found.",
            );
        }
        else{
            if(empty($customer_id)){
                $qu = "select id, name, company_name, company_address, billing_state from customers";
            }
            else{
                $qu = "select id, name, company_name, company_address, billing_state from customers where id = '".$customer_id."'";
            }
            $query = $this->db->query($qu);
            $customer_details = $query->result();    

            if(!empty($customer_details)){
                foreach($customer_details as $p){  
                    $qu = "select sum(total_cost) as total_cost from invoices where (created_on >= '".$invoice_to."' and created_on <= '".$invoice_from."') and customer_id = '".$p->id."'";
                    $query = $this->db->query($qu);
                    $total_transaction = $query->row();    

                    $qu = "select sum(total_cost) as total_cost from invoices where (created_on >= '".$invoice_to."' and created_on <= '".$invoice_from."') and customer_id = '".$p->id."' and payment_status = 'Completed'";
                    $query = $this->db->query($qu);
                    $total_paid = $query->row();    

                    $qu = "select sum(total_cost) as total_cost from invoices where (created_on >= '".$invoice_to."' and created_on <= '".$invoice_from."') and customer_id = '".$p->id."' and payment_status != 'Completed'";
                    $query = $this->db->query($qu);
                    $total_pending = $query->row();    

                    $qu = "select state_name from state where id = '".$p->billing_state."'";
                    $query = $this->db->query($qu);
                    $state = $query->row();    

                    $report_data .= '<tr>
                        <td>'.$p->name.'</td>
                        <td>'.$p->company_name.'</td>                     
                        <td>'.$p->company_address.'</td>                     
                        <td>'.$state->state_name.'</td>                     
                        <td>'.$total_transaction->total_cost.'</td>                      
                        <td>'.$total_paid->total_cost.'</td>                      
                        <td>'.$total_pending->total_cost.'</td>                      
                    </tr>';
                } 
                $csv_data .= '<tr>
                    <td colspan="7">
                        <a href="'.base_url().'report/export_customer_report/'.$invoice_to.'/'.$invoice_from.'/'.$customer_id.'" class="btn btn-info btn-xs">
                            <span class="fa fa-pencil"></span>Export CSV
                        </a></td></tr>';
            } 
            else{ 
                $report_data .= '<tr>
                    <td colspan="7">No record Found.</td>
                </tr>';
            } 

            $response = array(
                "status" => "success",
                "report_data" => $report_data,
                "csv_data" => $csv_data,
            ); 
        }
        echo json_encode($response);    
    }
  
    function export_customer_report($invoice_to, $invoice_from, $customer_id)
    {
        $this->Common_model->checklogin();
        $this->load->helper('csv');

        $arr[] = array('Name','Company Name','Address','State','Total Transaction','Total Paid','Total Pending');
        if(empty($customer_id)){
            $qu = "select id, name, company_name, company_address, billing_state from customers";
        }
        else{
            $qu = "select id, name, company_name, company_address, billing_state from customers where id = '".$customer_id."'";
        }
        $query = $this->db->query($qu);
        $customer_details = $query->result();    

        foreach($customer_details as $p){  
            $qu = "select sum(total_cost) as total_cost from invoices where (created_on >= '".$invoice_to."' and created_on <= '".$invoice_from."') and customer_id = '".$p->id."'";
            $query = $this->db->query($qu);
            $total_transaction = $query->row();    

            $qu = "select sum(total_cost) as total_cost from invoices where (created_on >= '".$invoice_to."' and created_on <= '".$invoice_from."') and customer_id = '".$p->id."' and payment_status = 'Completed'";
            $query = $this->db->query($qu);
            $total_paid = $query->row();    

            $qu = "select sum(total_cost) as total_cost from invoices where (created_on >= '".$invoice_to."' and created_on <= '".$invoice_from."') and customer_id = '".$p->id."' and payment_status != 'Completed'";
            $query = $this->db->query($qu);
            $total_pending = $query->row();    

            $qu = "select state_name from state where id = '".$p->billing_state."'";
            $query = $this->db->query($qu);
            $state = $query->row();    
        
            $arr[] = array($p->name, $p->company_name, $p->company_address, $state->state_name, $total_transaction->total_cost, $total_paid->total_cost, $total_pending->total_cost);
        } 
        array_to_csv($arr, 'customer_report'.date('Y-m-d').'.csv');
    }  
    //------------------ customer report end -------------------

    //------------------ invoice report start -------------------
    function invoice()
    {
        $this->Common_model->checklogin();

        $data['invoice_to'] = date('Y-m-d', strtotime("-1 months")); 
        $data['invoice_from'] = date('Y-m-d'); 

        $qu = "select * from invoices where created_on >= '".$data['invoice_to']."' and created_on <= '".$data['invoice_from']."'";
        $query = $this->db->query($qu);
        $data['invoice_details'] = $query->result();    

        $data['_view'] = 'report/invoice';
        $this->load->view('layouts/main',$data);
    }

    function get_invoice_report()
    {
        $this->Common_model->checklogin();

        $invoice_to = $this->input->post("invoice_to");
        $invoice_from = $this->input->post("invoice_from");
        $report_data = '';
        $csv_data = '';

        if(empty($invoice_to) && empty($invoice_from)){
            $response = array(
                "status" => "error",
                "message" => "Record not found.",
            );
        }
        else{
            $qu = "select * from invoices where created_on >= '".$invoice_to."' and created_on <= '".$invoice_from."'";
            $query = $this->db->query($qu);
            $invoice_details = $query->result();    

            if(!empty($invoice_details)){
                foreach($invoice_details as $p){  
                    $invoice_ids = "";                            
                    $qu = "select sku from order_details where (created >= '".$invoice_to."' and created <= '".$invoice_from."') and invoice_id = '".$p->id."'";
                    $query = $this->db->query($qu);
                    $invoice_data = $query->result();    
                    foreach($invoice_data as $invoic){
                        if($invoice_ids == ""){
                            $invoice_ids = $invoic->sku;
                        }
                        else{
                            $invoice_ids .= ",".$invoic->sku;   
                        }
                    }            
                    $amt = $p->total_cost + $p->tax_amount;

                    $report_data .= '<tr>
                        <td>'.$p->customer_name.'</td>
                        <td>'.$p->invoice_date.'</td>                     
                        <td>'.$p->id.'</td>                     
                        <td>'.$p->payment_mode.'</td>                     
                        <td>'.$p->payment_status.'</td>                      
                        <td>'.$invoice_ids.'</td>                      
                        <td>'.$amt.'</td>                      
                        <td>'.$p->total_cost.'</td>                      
                        <td>'.$p->tax_amount.'</td>                      
                    </tr>';
                } 
                $csv_data .= '<tr>
                    <td colspan="9">
                        <a href="'.base_url().'report/export_invoice_report/'.$invoice_to.'/'.$invoice_from.'" class="btn btn-info btn-xs">
                            <span class="fa fa-pencil"></span>Export CSV
                        </a></td></tr>';
            } 
            else{ 
                $report_data .= '<tr>
                    <td colspan="9">No record Found.</td>
                </tr>';
            } 

            $response = array(
                "status" => "success",
                "report_data" => $report_data,
                "csv_data" => $csv_data,
            ); 
        }
        echo json_encode($response);    
    }
  
    function export_invoice_report($invoice_to, $invoice_from)
    {
        $this->Common_model->checklogin();
        $this->load->helper('csv');

        $arr[] = array('Customer Name', 'Invoice Date', 'Invoice No', 'Payment Mode', 'Payment Status', 'Products Included [SKU’s]', 'total amount', 'amount', 'tax');
        $qu = "select * from invoices where created_on >= '".$invoice_to."' and created_on <= '".$invoice_from."'";
        $query = $this->db->query($qu);
        $invoice_details = $query->result();    

        foreach($invoice_details as $p){  
            $invoice_ids = "";                            
            $qu = "select sku from order_details where (created >= '".$invoice_to."' and created <= '".$invoice_from."') and invoice_id = '".$p->id."'";
            $query = $this->db->query($qu);
            $invoice_data = $query->result();    
            foreach($invoice_data as $invoic){
                if($invoice_ids == ""){
                    $invoice_ids = $invoic->sku;
                }
                else{
                    $invoice_ids .= ",".$invoic->sku;   
                }
            }            
            $amt = $p->total_cost + $p->tax_amount;   
       
            $arr[] = array($p->customer_name, $p->invoice_date, $p->id, $p->payment_mode, $p->payment_status, $invoice_ids, $amt, $p->total_cost, $p->tax_amount);
        } 
        array_to_csv($arr, 'invoice_report'.date('Y-m-d').'.csv');
    }  
    //------------------ customer report end -------------------
    function exportgst()
    {
    	$this->Common_model->checklogin();
    	$data['_view'] = 'report/export-gst';
        $this->load->view('layouts/main',$data);
    }
      
    function export_gst_customer()
    {
    	$this->load->dbutil();
    	$name = 'Customers.csv'; //Default File name
    	if(isset($_POST['filename']) && $_POST['filename']!='')
    	{
    		$name = $_POST['filename'].'.csv';
    	}
    	$group = $_POST['group_name'];
    	$type = $_POST['dealer_type'];
        $q=$this->db->query("select c.company_name as 'Company Name', c.company_address as Address, c.company_gst_no as GSTIN, '".$group."' as 'Group Name', '".$type."' as 'DealerType', (select s.state_name from state s where s.id=c.billing_state) as State from customers c order by c.id desc");
        $delimiter = ",";
        $newline = "\r\n";
        $row =  $this->dbutil->csv_from_result($q,$delimiter,$newline);
        $this->load->helper('download');
        force_download($name,$row);
    }
    function export_gst_product()
    {
    	$name = 'Products.csv'; //Default File name
    	if(isset($_POST['filename']) && $_POST['filename']!='')
    	{
    		$name = $_POST['filename'].'.csv';
    	}
    	$this->load->dbutil();
    
    	//$tax_category = $_POST['tax_category'];

        $q=$this->db->query("select p.name as 'Product Name', p.sku as SKU, p.unit as 'Unit of Measurement (UOM)', (select t.tax_per from tax_class t where t.id=p.tax_class) as 'Tax Category', p.hsncode as Hsncode from products p order by p.id desc");
        $delimiter = ",";
        $newline = "\r\n";
        $row =  $this->dbutil->csv_from_result($q,$delimiter,$newline);

        $this->load->helper('download');   
        force_download($name,$row);
    }

    function export_gst_sales()
    {
    // 	echo '<pre>';
    // 	print_r($_POST);

    	$name = 'Sales.csv'; //Default File name
    	if(isset($_POST['filename']) && $_POST['filename']!='')
    	{
    		$name = $_POST['filename'];
    	}
    	$gstseries = $_POST['gstseries'];
    	$this->load->dbutil();
    	$heading = array('GSTSeries', ' Invoice Date', 'Invoice Number', 'Tax Type', 'Party Name','Item name', 'Quantity', 'Unit', 'Rate', 'Taxable Amount');
    	$invoices = $this->Common_model->get_sql_rows("select i.id as Invoice, i.created_on, i.customer_name from invoices i where i.created_on >= '".$_POST['invoice_to']."' and i.created_on <= '".$_POST['invoice_from']."'");

		header('Content-type: text/csv');
		header('Content-Disposition: attachment; filename="'.$name.'.csv"');
		// do not cache the file
		header('Pragma: no-cache');
		header('Expires: 0');
		// create a file pointer connected to the output stream
		$file = fopen('php://output', 'w');

		//$file = fopen($this->config->item('basepath').'/upload/data.csv', 'w');

		foreach ($invoices as $inv) {
			$counter = 0;
			$orders = $this->Common_model->get_sql_rows("select * from order_details where invoice_id=".$inv->Invoice);
			foreach ($orders as $order) {
				$inv_date = date('Y-m-d', strtotime($inv->created_on));
				if($order->igst==0)
				{
					$tax_type = 'I/GST-TaxIncl.';
				}
				else
				{
					$tax_type = 'L/GST-TaxIncl.';	
				}
				if($counter==0)
				{
					$invoice_number = $inv->Invoice;
					
				}
				else
				{
					$invoice_number = '';
					//$inv_date = '';
				}
				$csvlines[] = array($gstseries, $inv_date, $invoice_number, $tax_type , $inv->customer_name ,$order->title, $order->qty, $order->unit, $order->product_cost, $order->taxable_value);
				$counter++;
				
			}
			# code...
		}
		fputcsv($file, $heading);
		foreach ($csvlines as $row)
		{
		fputcsv($file, $row);
		}
		fclose($file);
		
    }
}
