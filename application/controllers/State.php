<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class State extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('State_model');
    } 

    /*
     * Listing of state
     */
    function index()
    {
        $this->Common_model->checklogin();
        $data['state'] = $this->State_model->get_all_state();
        
        $data['_view'] = 'state/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new state
     */
    function add()
    {   
        $this->Common_model->checklogin();
        $this->load->library('form_validation');

		$this->form_validation->set_rules('state_name','State Name','required');
		$this->form_validation->set_rules('state_code','State Code','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'type' => $this->input->post('type'),
				'state_name' => $this->input->post('state_name'),
				'state_code' => $this->input->post('state_code'),
            );
            
            $state_id = $this->State_model->add_state($params);
            redirect('state/index');
        }
        else
        {            
            $data['_view'] = 'state/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a state
     */
    function edit($id)
    {   
        $this->Common_model->checklogin();
        // check if the state exists before trying to edit it
        $data['state'] = $this->State_model->get_state($id);
        
        if(isset($data['state']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('state_name','State Name','required');
			$this->form_validation->set_rules('state_code','State Code','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'type' => $this->input->post('type'),
					'state_name' => $this->input->post('state_name'),
					'state_code' => $this->input->post('state_code'),
                );

                $this->State_model->update_state($id,$params);            
                redirect('state/index');
            }
            else
            {
                $data['_view'] = 'state/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The state you are trying to edit does not exist.');
    } 

    /*
     * Deleting state
     */
    function remove($id)
    {
        $this->Common_model->checklogin();
        $state = $this->State_model->get_state($id);

        // check if the state exists before trying to delete it
        if(isset($state['id']))
        {
            $this->State_model->delete_state($id);
            redirect('state/index');
        }
        else
            show_error('The state you are trying to delete does not exist.');
    }

    function cities()
    {
        $this->Common_model->checklogin();
        $data['state'] = $this->Common_model->get_sql_rows('select c.id, c.cityname, c.tier_class, s.state_name from cities c, state s where s.id=c.stateid order by cityname asc');
        
        $data['_view'] = 'state/cities';
        $this->load->view('layouts/main',$data);
    }

    function addcity()
    {   
        $this->Common_model->checklogin();
        $this->load->library('form_validation');
        $this->form_validation->set_rules('cityname','stateid','required');
        
        if($this->form_validation->run())     
        {   
            $check  = array('cityname' => $this->input->post('cityname'), 'stateid' => $this->input->post('stateid') );
            $params = array(
                'tier_class' => $this->input->post('tier_class'),
                'cityname' => $this->input->post('cityname'),
                'stateid' => $this->input->post('stateid'),
            );
            
            $state_id = $this->Common_model->insert_table_data($params, 'cities',$check);

            redirect('state/cities');
        }
        else
        {    $data['states'] = $this->Common_model->get_sql_rows('select * from state order by state_name asc');         
            $data['_view'] = 'state/addcity';
            $this->load->view('layouts/main',$data);
        }
    }  
    function removecity($id)
    {
        $this->Common_model->checklogin();
        $city = $this->Common_model->get_rowdata_by_id($id,'cities');

        // check if the state exists before trying to delete it
        if(isset($city->id))
        {
            $this->Common_model->delete_table($id,'cities');
            $this->session->set_flashdata('message', '<div class="alert alert-danger">City Deleted!</div>');
            redirect('state/cities');
        }
        else
            show_error('The state you are trying to delete does not exist.');
    }
    
}
