<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Stock extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Album_model');
        $this->load->model('Product_model');
    } 

    /*
     * Listing of album
     */
    function index()
    {
       
    }
    function import()
    {
        $this->Common_model->checklogin();
            $data['_view'] = 'stock/import';
            $this->load->view('layouts/main',$data);
    }
    function import_stock()
    {
        $this->Common_model->checklogin();
            
      //  print_r($_FILES);
        if( !empty($_FILES["stock"]["name"]))
            {
                $this->load->library('upload');            
            $path =  $this->config->item('basepath');
                $config['upload_path'] = $path.'upload/tmp';
                $config['file_name'] = rand(1000,9999).'_'.$_FILES["stock"]["name"];
                $config['overwrite']    = TRUE; 
                $config['allowed_types'] = 'csv';
                $config['max_size'] = '5000';
                $this->upload->initialize($config);
                if (!$this->upload->do_upload("stock")){
                    $data['error'] =  $this->upload->display_errors(); 
                    print_r($data);  
                }    
                else{                           
                    $data = array('upload_data' => $this->upload->data());
                   // print_r($data);
                    $imagename = $data['upload_data']['file_name'];                             
                }  
            
                $csvFile = file($path.'upload/tmp/'.$imagename);
                $data = [];
                $i=0; $inserted_pro = 0;
                foreach ($csvFile as $line) {

                    if($i==0)
                    {
                        $headers = str_getcsv($line);
                       
                    }
                    else
                    {
                   
                    $data_arr[] = $data = str_getcsv($line);
                  if($data[0]!='' && $data[1]!=''  && $data[2]!=''  && $data[4]!='')
                  {
                        $product = $this->Common_model->get_sql_row('select id, quantity from products where sku="'.$data[0].'"');
                       $new_qty = $product->quantity + $data[4];
                        $pro = array(
                            'quantity'=>$new_qty,
                            );
                        $checksku = array('sku'=>$data[0]);
                        $pid = $this->Common_model->update_table_data($product->id, $pro, 'products');
                        echo $this->db->last_query();
                        $inserted_pro++;
                        
                        $stocklog = array('product_id'=>$pid,'affected_qty'=>$data[4],'new_qty'=>$new_qty, 'comments'=>'New product entry from CSV');
                        $this->Common_model->insert_table_data($stocklog, 'stock_log');
                        
                    }
                   
                }
               
                 $i++;
            }
             $this->session->set_flashdata('message', '<div class="alert alert-success">Inserted '.$inserted_pro.' out of '.$i.' !!!</div>');
            redirect(base_url().'stock/import');
            
        }
        else
        {
            $data['_view'] = 'stock/import_stock';
            $this->load->view('layouts/main',$data);
        }
    }

    function export_stock()
    {
        $this->Common_model->checklogin();
            $data['_view'] = 'stock/export_stock';
            $this->load->view('layouts/main',$data);
            
    }
    function export_stock_sub()
    {
        $this->Common_model->checklogin();
         $this->load->helper('csv');
        if(isset($_GET['filter']) && $_GET['filter']=='Generate')
            {
                $where = 'where status=1 ';
                if(isset($_GET['cat']) && $_GET['cat']!='0')
                    $where .=' and category_id='.$_GET['cat'];
                if(isset($_GET['brand']) && $_GET['brand']!='0')
                    $where .=' and brand_id='.$_GET['brand'];
                $pro = $this->Common_model->get_sql_rows('select * from products '.$where);

                $arr[] = array('ID','SKU','Product Name', 'Stock');
                foreach($pro as $item)
                {
                    $arr[] = array($item->id,$item->sku, $item->name, $item->quantity);
                }
              array_to_csv($arr, 'products.csv');


            }

    }

    function import_product()
    {
        $this->Common_model->checklogin();
      //  print_r($_FILES);
        if( !empty($_FILES["products"]["name"]))
            {
                $this->load->library('upload');            
            $path =  $this->config->item('basepath');
                $config['upload_path'] = $path.'upload/tmp';
                $config['file_name'] = rand(1000,9999).'_'.$_FILES["products"]["name"];
                $config['overwrite']    = TRUE; 
                $config['allowed_types'] = 'csv';
                $config['max_size'] = '5000';
                $this->upload->initialize($config);
                if (!$this->upload->do_upload("products")){
                    $data['error'] =  $this->upload->display_errors(); 
                    print_r($data);  
                }    
                else{                           
                    $data = array('upload_data' => $this->upload->data());
                   // print_r($data);
                    $imagename = $data['upload_data']['file_name'];                             
                }  
            
                $csvFile = file($path.'upload/tmp/'.$imagename);
                $data = [];
                $i=0; $inserted_pro = 0;
                foreach ($csvFile as $line) {

                    if($i==0)
                    {
                        $headers = str_getcsv($line);
                        //echo 'Helo2'; print_r($line); echo '<hr>';
                    }
                    else
                    {
                   
                    $data_arr[] = $data = str_getcsv($line);
                  if($data[0]!='' && $data[1]!='')
                  {
                        $tax_class = $this->Common_model->get_sql_row('select id from tax_class where tax_per="'.$data[7].'"');
                        $cat_id = $this->Common_model->get_sql_row('select id from categories where cat_name="'.$data[9].'"');
                        $brand_id = $this->Common_model->get_sql_row('select id from brands where name="'.$data[8].'"');
                        $car_make_id = $this->Common_model->get_sql_row('select id from car_make where name="'.$data[10].'"');
                        $pro = array('product_type'=>'1', 
                            'sku'=>$data[0], 
                            'name'=>$data[1],
                            'consumer_price'=>$data[2],
                            'retailer_price'=>$data[3],
                            'wholesaler_price'=>$data[4],
                            'hsncode'=>$data[5],
                            'quantity'=>$data[6],
                            'tax_class'=>isset($tax_class->id)?$tax_class->id:0,
                            'category_id'=>isset($cat_id->id)?$cat_id->id:0,
                            'brand_id'=>isset($brand_id->id)?$brand_id->id:0,
                            'car_make_id'=>isset($car_make_id->id)?$car_make_id->id:0,
                            'status'=>'1',
                            );
                        $checksku = array('sku'=>$data[0]);
                        $pid = $this->Common_model->insert_table_data($pro, 'products',$checksku);
                        $inserted_pro++;
                        //print_r($pro); echo $this->db->last_query();
                        //Update stock Log
                        if($pid && ($data[6]!='' or $data[6]!=0) )
                        {
                            
                            $stocklog = array('product_id'=>$pid,'affected_qty'=>$data[5],'new_qty'=>$data[5], 'comments'=>'New product entry from CSV');
                            $this->Common_model->insert_table_data($stocklog, 'stock_log');
                        }
                    }
                   
                }
               
                 $i++;
            }
             $this->session->set_flashdata('message', '<div class="alert alert-success">Inserted '.$inserted_pro.' out of '.$i.' records !!!</div>');
            redirect(base_url().'stock/import');
            
        }
        else
        {
            $data['_view'] = 'stock/import_product';
            $this->load->view('layouts/main',$data);
        }

    }
    /*
     * Adding a new album
     */
    function add()
    { 
    $this->Common_model->checklogin();  
        $this->load->library('form_validation');

		$this->form_validation->set_rules('party_name','Party Name','required');
        $this->form_validation->set_rules('amount', 'Amount ', 'required|regex_match[/^[0-9]+$/]'); //{10} for 10 digits number
		
		if($this->form_validation->run())     
        {   
            $params = array(
                'party_name' => $this->input->post('party_name'),
                'amount' => $this->input->post('amount'),
                'bilty_number' => $this->input->post('bilty_number'),
				'comment' => $this->input->post('comment'),
                "reminder_date" => $this->input->post("reminder_date"),
                'status' => $this->input->post('status'),
                'created' => date('Y-m-d'),
            );
            
            $album_id = $this->Album_model->add_album($params);
            redirect('album/index');
        }
        else
        {            
            $data['_view'] = 'album/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a album
     */
    function edit($id)
    { 
    $this->Common_model->checklogin();  
        // check if the album exists before trying to edit it
        $data['album'] = $this->Album_model->get_album($id);
        
        if(isset($data['album']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('party_name','Party Name','required');
            $this->form_validation->set_rules('amount', 'Amount ', 'required|regex_match[/^[0-9]+$/]'); //{10} for 10 digits number
		
			if($this->form_validation->run())     
            {   
                $params = array(
                    'party_name' => $this->input->post('party_name'),
                    'amount' => $this->input->post('amount'),
                    'bilty_number' => $this->input->post('bilty_number'),
                    'comment' => $this->input->post('comment'),
                    "reminder_date" => $this->input->post("reminder_date"),
                    'status' => $this->input->post('status'),
                );

                $this->Album_model->update_album($id,$params);            
                redirect('album/index');
            }
            else
            {
                $data['_view'] = 'album/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The album you are trying to edit does not exist.');
    } 

    /*
     * Deleting album
     */
    function remove($id)
    {
        $this->Common_model->checklogin();
        $album = $this->Album_model->get_album($id);

        // check if the album exists before trying to delete it
        if(isset($album['id']))
        {
            $this->Album_model->delete_album($id);
            redirect('album/index');
        }
        else
            show_error('The album you are trying to delete does not exist.');
    }
    function modify()
    {
        
        $data['products'] = $this->Product_model->get_all_products();
        $data['_view'] = 'stock/modify';
        $this->load->view('layouts/main',$data);
    }
    function showlog($pid)
    {
        $this->db->select('u.*, q.invoice_no');
        $this->db->from('stock_log u'); // this joins the user table to topics
        $this->db->join('invoices q', 'q.id = u.invoice_id','left'); // this joins the quote table to the topics table
        $this->db->order_by("u.id", "desc");
        $this->db->where('u.product_id',$pid);
        $query = $this->db->get();
        // $data['stocklog'] = $this->Common_model->get_sql_rows('select * from stock_log where product_id='.$pid.' order by id desc');
        $data['stocklog'] = $query->result();
        $data['product'] = $this->Common_model->get_sql_row('select * from products where id='.$pid);
        
        $data['_view'] = 'stock/stock_log';
        $this->load->view('layouts/main',$data);
    }
    function showlogall()
    {
        $this->db->select('u.*, q.invoice_no');
        $this->db->from('stock_log u'); // this joins the user table to topics
        $this->db->join('invoices q', 'q.id = u.invoice_id'); // this joins the quote table to the topics table
        $this->db->order_by("u.id", "desc");
        $query = $this->db->get();

        // $data['stocklog'] = $this->Common_model->get_sql_rows('select * from stock_log order by id desc');
        $data['stocklog'] = $query->result();
        $data['_view'] = 'stock/stock_log_all';
        $this->load->view('layouts/main',$data);
    }
    function clearlog($id)
    {
        $data['product'] = $this->Common_model->delete_table_param('stock_log', array('product_id' =>$id));
        redirect(base_url().'stock/showlogall');
        
    }

    function clearstocklog()
    {
        $data['product'] = $this->Common_model->exec_sql('truncate stock_log');
        redirect(base_url().'stock/showlogall');
        
    }

    function updateinventory()
    {
        // echo json_encode(print_r($_POST));
        // exit();
        $pid = $this->input->post('pid');
        $qty = $this->input->post('qty');
        $remarks = $this->input->post('remarks')=='' ?$this->input->post('remarks'):'Updated from Stock Managment';
        if($qty!='' && $pid!=''){
        if(!is_numeric($qty) && $qty!='0')
        {
            $output = array('status'=>false, $newqty, 'msg'=>'Invalid Input');
            echo json_encode($output);
            return;
        }
        //Get Current Quantity;
        $pro = $this->Common_model->get_sql_row('select quantity from products where id='.$pid);
        if ( $qty > 0 ) 
        {
            $stock_type = 'IN';
            $newqty = $pro->quantity + $qty;
        } elseif( $qty < 0 ) 
        {
            $stock_type = 'OUT';
            $newqty = $pro->quantity + (int)$qty;
        }

        // echo "new quantoty = $newqty <br>";
        // exit();
        if(isset($newqty))
        {
            //Update Quantity
            $datainfo = array(
                    'quantity'=>$newqty,
                );
            $this->Product_model->update_product($pid,$datainfo);  
            //echo $this->db->last_query().'<br>';

            //Set Stock Log
            $stock = array(
                    'stock_type'=>$stock_type,
                    'product_id'=>$pid,
                    'qty'=>$qty,
                    'new_qty'=>$newqty,
                    'remarks'=>$remarks,
                );
            $check = array('product_id'=>$pid,'qty'=>$qty,'created'=>date('y-m-d H:i'));
            $this->Common_model->insert_table_data($stock , 'stock_log', $check);  
            // echo $this->db->last_query().'<br>';
            // exit();
            $output = array('status'=>true,'newqty'=>$newqty, 'msg'=>'Stock Updated');
            echo json_encode($output);
        }
    }

    }
    function downloadlog()
    {
        $this->Common_model->checklogin();
        $this->load->helper('csv');
        $pro = $this->Common_model->get_sql_rows('select * from stock_log order by id desc');
        $arr[] = array('SKU','Product Name', 'Type','Quantity' , 'Updated Quantity', 'Invoice', 'Remarks','Date');
        foreach($pro as $item)
       {
             $product = $this->Common_model->get_sql_row('select * from products where id='.$item->product_id);
            $arr[] = array($product->sku, $product->name, $item->stock_type, $item->qty, $item->new_qty, $item->invoice_id, $item->remarks, $item->created);
        }
        array_to_csv($arr, 'inventory_log'.date('Y-m-d').'.csv');
    }
    
}
