<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Notes extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Notes_model');
    } 

    /*
     * Listing of notes
     */
    function index($status='all')
    {
    	
        $this->Common_model->checklogin();

        $data['notes'] = $this->Notes_model->get_all_notes($status);
        //echo $this->db->last_query();
        
        $data['_view'] = 'notes/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new notes
     */
    function add()
    {   
        $this->Common_model->checklogin();
        $this->load->library('form_validation');

		$this->form_validation->set_rules('title','Title','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
                'title' => $this->input->post('title'),
				'remark' => $this->input->post('remark'),
                "reminder_date" => date('Y-m-d', strtotime($this->input->post("reminder_date"))),
                'status' => $this->input->post('status'),
                'created' => date('Y-m-d'),
            );
            
            $notes_id = $this->Notes_model->add_notes($params);
            redirect('notes/index');
        }
        else
        {            
            $data['_view'] = 'notes/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a notes
     */
    function edit($id)
    {   
        $this->Common_model->checklogin();
        // check if the notes exists before trying to edit it
        $data['notes'] = $this->Notes_model->get_notes($id);
        
        if(isset($data['notes']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('title','Title','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
                    'title' => $this->input->post('title'),
                    'remark' => $this->input->post('remark'),
                    "reminder_date" => date('Y-m-d', strtotime($this->input->post("reminder_date"))),
                    'status' => $this->input->post('status'),
                );

                $this->Notes_model->update_notes($id,$params);            
                redirect('notes/index');
            }
            else
            {
                $data['_view'] = 'notes/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The notes you are trying to edit does not exist.');
    } 

    function updatestatus()
    {
        $id = $_GET['id'];
        $status = $_GET['status'];
        $params = array(
                    'status' => $status,
                );
        $this->Notes_model->update_notes($id,$params);  
        $this->session->set_flashdata('message', '<div class="alert alert-success">Note Status Updated</div>');          
        redirect('notes/index/open');

    }

    /*
     * Deleting notes
     */
    function remove($id)
    {
        $this->Common_model->checklogin();
        $notes = $this->Notes_model->get_notes($id);

        // check if the notes exists before trying to delete it
        if(isset($notes['id']))
        {
            $this->Notes_model->delete_notes($id);
            redirect('notes/index');
        }
        else
            show_error('The notes you are trying to delete does not exist.');
    }
    
}
