<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Admin extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Admin_model');
        $this->load->helper('cookie');
        $this->load->model('Sendmail');

    } 

    /*
     * Listing of admin
     */
    function index()
    {
        $this->Common_model->checklogin();
        $data['admin'] = $this->Admin_model->get_all_admin(); 
        $data['_view'] = 'admin/index';
        $this->load->view('layouts/main',$data);
    }
    function loginprocess()
    {
        $user = $this->input->post('user');
        $pass= $this->input->post('pass');
        $arr = array('username'=>$user, 'password'=>$pass);
        $data = $this->Common_model->get_rowdata_by_val($arr, 'admin');
        
       if(isset($data->id) && $data->id!='')
       {
            $logindata = array(
            'username'  => $data->username,
            'role'     => $data->user_role,
            'id'     => $data->id,
            'logged_in' => TRUE
        );

        $this->session->set_userdata($logindata);
        if(isset($_POST['rem']))
        {
            $cookie = array(
                    'name'   => 'log_id',
                    'value'  => $data->id,
                    'expire' => '1209600',  // Two weeks
                    'domain' => '.hals.blue',
                    'path'   => '/'
                );
            set_cookie($cookie);
            //set_cookie('log_id',$data->id, time()+60*60*24*7);  
        }
        $this->session->set_flashdata('message', '<div class="alert alert-success">Login Successfully!!!</div>');
        redirect(base_url().'dashboard/index');
       }
       else
       {
        $this->session->set_flashdata('message', '<div class="alert alert-danger">Opps! Username or Password seems to be incorrect!</div>');
        redirect(base_url().'admin/login');
       }
       //print_r(get_cookie('log_id'));

     // print_r($this->session);

        
    }
    function logout()
    {
        $this->session->sess_destroy();
        delete_cookie('log_id');
         $this->session->set_flashdata('message', '<div class="alert alert-success">Logout Successfully!!!</div>');
        redirect(base_url().'admin/login');
    }
    function login()
    {
        
        $data['ptitle'] = 'Halsblue Login';
        $this->load->view('admin/login',$data);
    }
    function forgot_pass()
    {
        
        $data['ptitle'] = 'Halsblue - Forgot Password';
        $this->load->view('admin/forgot_pass',$data);
    }
    function resendpass()
    {
        $text = $_POST['email'];
        $user = $this->Common_model->get_sql_row('select * from admin where email="'.$text.'"');
        if($user)
        {
            $data = array('subject'=>'Your password for Halsblue Control Panel.',
                'name'=>$user->username,
                'content'=>'<p>Your password is '.$user->password.'</p>'
            );
            $mail = $this->Sendmail->sendphpmail($user->email,'noreply@hals.blue', 'Your password for Halsblue Control Panel.', $data );
           // echo $mail;
            $this->session->set_flashdata('message', '<div class="alert alert-success">Password sent to your email. Please check your inbox.</div>');
            redirect(base_url().'admin/login');
        }
        else
        {
            $this->session->set_flashdata('message', '<div class="alert alert-danger">'.$text.' - Doesnot exists! <br> Please contact your webmaster</div>');
            redirect(base_url().'admin/forgot_pass');   
        }

    }
    /*
     * Adding a new admin
     */
    function add()
    {   
        $this->Common_model->checklogin();
        $this->load->library('form_validation');

		$this->form_validation->set_rules('password','Password','required');
		$this->form_validation->set_rules('username','Username','required');
        $this->form_validation->set_rules('email','Email','required');
		$this->form_validation->set_rules('user_role','User Role','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'user_role' => $this->input->post('user_role'),
				'password' => $this->input->post('password'),
				'username' => $this->input->post('username'),
                'email' => $this->input->post('email'),
            );
            
            $admin_id = $this->Admin_model->add_admin($params);
            redirect('admin/index');
        }
        else
        {            
            $data['_view'] = 'admin/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a admin
     */
    function edit($id)
    {   
        $this->Common_model->checklogin();
        // check if the admin exists before trying to edit it
        $data['admin'] = $this->Admin_model->get_admin($id);
        
        if(isset($data['admin']['id']))
        {
            $this->load->library('form_validation');
			$this->form_validation->set_rules('password','Password','required');
            $this->form_validation->set_rules('email','Email','required');
			$this->form_validation->set_rules('username','Username','required');
			$this->form_validation->set_rules('user_role','User Role','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'user_role' => $this->input->post('user_role'),
					'password' => $this->input->post('password'),
					'username' => $this->input->post('username'),
                    'email' => $this->input->post('email'),
                );

                $this->Admin_model->update_admin($id,$params);            
                redirect('admin/index');
            }
            else
            {
                $data['_view'] = 'admin/edit';
                $data['ptitle'] = 'Edit User';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The admin you are trying to edit does not exist.');
    } 

    /*
     * Deleting admin
     */
    function remove($id)
    {
        $this->Common_model->checklogin();
        $admin = $this->Admin_model->get_admin($id);

        // check if the admin exists before trying to delete it
        if(isset($admin['id']))
        {
            $this->Admin_model->delete_admin($id);
            redirect('admin/index');
        }
        else
            show_error('The admin you are trying to delete does not exist.');
    }
    function test(){
        echo 'Hello<hr>';
    }
   
 
    
}
