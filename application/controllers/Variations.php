<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Variations extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Variations_model');
    } 

    /*
     * Listing of variations
     */
    function index()
    {
        $this->Common_model->checklogin();
        $data['variations'] = $this->Variations_model->get_all_variations();
        
        $data['_view'] = 'variations/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new variations
     */
    function add()
    {   
        $this->Common_model->checklogin();
        $this->load->library('form_validation');

        $this->form_validation->set_rules('name','Name','required');
		$this->form_validation->set_rules('name_value','Value','required');
		$name_value_val = array();
		if($this->form_validation->run())     
        {   
            $name_value = $this->input->post('name_value');
            if(!empty($name_value)){
                $name_value_exp = explode(",", $name_value);
                foreach($name_value_exp as $name_value_exp_val){
                    $name_value_val[] = $name_value_exp_val;
                }
            }

            $params = array(
                'name' => $this->input->post('name'),               
                'name_value' => json_encode($name_value_val),				
                'created' => date('Y-m-d'),
            );
            
            $variations_id = $this->Variations_model->add_variations($params);
            redirect('variations/index');
        }
        else
        {            
            $data['_view'] = 'variations/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a variations
     */
    function edit($id)
    {   
        $this->Common_model->checklogin();
        // check if the variations exists before trying to edit it
        $data['variations'] = $this->Variations_model->get_variations($id);
        $name_value_val = array();
        if(isset($data['variations']['id']))
        {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('name','Name','required');
			$this->form_validation->set_rules('name_value','Value','required');
		
			if($this->form_validation->run())     
            {   
                $name_value = $this->input->post('name_value');
                if(!empty($name_value)){
                    $name_value_exp = explode(",", $name_value);
                    foreach($name_value_exp as $name_value_exp_val){
                        $name_value_val[] = $name_value_exp_val;
                    }
                }

                $params = array(
                    'name' => $this->input->post('name'),
                    'name_value' => json_encode($name_value_val),
                );

                $this->Variations_model->update_variations($id,$params);            
                redirect('variations/index');
            }
            else
            {
                $data['_view'] = 'variations/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The variations you are trying to edit does not exist.');
    } 

    /*
     * Deleting variations
     */
    function remove($id)
    {
        $this->Common_model->checklogin();
        $variations = $this->Variations_model->get_variations($id);

        // check if the variations exists before trying to delete it
        if(isset($variations['id']))
        {
            $this->Variations_model->delete_variations($id);
            redirect('variations/index');
        }
        else
            show_error('The variations you are trying to delete does not exist.');
    }
    
}
